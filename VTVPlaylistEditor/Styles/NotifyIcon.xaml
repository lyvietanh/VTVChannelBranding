<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:viewmodel="clr-namespace:VTVPlaylistEditor.ViewModels"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
  -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <MenuItem Header="_Hiện cửa sổ" FontWeight="Bold" Command="{Binding ShowWindowCommand}" />
        <MenuItem Header="Ẩn" Command="{Binding HideWindowCommand}" />
        <Separator />
        <MenuItem Header="_Thiết lập" Command="{Binding OpenSettingWindowCommand}">
            <MenuItem.Icon>
                <materialDesign:PackIcon Kind="Settings" />
            </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Header="Th_oát chương trình" Command="{Binding ExitApplicationCommand}">
            <MenuItem.Icon>
                <materialDesign:PackIcon Kind="ExitToApp" />
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="/favicon.ico"
                    ToolTipText="Phần mềm Xử lý dữ liệu Traffic cho Channel branding"
                    DoubleClickCommand="{Binding ShowWindowCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}">

        <!-- self-assign a data context (could also be done programmatically) -->
        <tb:TaskbarIcon.DataContext>
            <viewmodel:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>
    
</ResourceDictionary>